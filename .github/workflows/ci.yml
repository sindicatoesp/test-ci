# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
#  tags:
#    - "build"
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    # branches-ignore: [master, main]
    branches: [ "main" ]



  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

###############
# Set the Job #
###############
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    ############################################
    # Grant status permission for MULTI_STATUS #
    ############################################
    permissions:
      contents: read
      packages: read
      statuses: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      ##########################
      # Checkout the code base #
      ##########################
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # super-linter needs the full git history to get the
          # list of files that changed across commits
          fetch-depth: 0

      ################################
      # Run Linter against code base #
      ################################
      - name: Lint Code Base
        uses: super-linter/super-linter@v5.7.2  # x-release-please-version
        env:
          VALIDATE_ALL_CODEBASE: true
          DEFAULT_BRANCH: main
          # To report GitHub Actions status checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Print hello world
        run: echo "Hello world!"

      ################################
      # Generate release file        #
      ################################

      - name: Compress files
        run: |
          tar -czvf output.tar.gz ./*.md

      - name: Upload Artifact
        id: upload-artifact
        uses: actions/upload-artifact@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: my-artifact
          overwrite: true
          path: ./output.tar.gz

